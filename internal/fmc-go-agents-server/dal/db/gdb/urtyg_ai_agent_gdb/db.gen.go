// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package urtyg_ai_agent_gdb

import (
	"github.com/freedqo/fmc-go-agents/internal/fmc-go-agents-server/dal/db/dbif/urtyg_ai_agent_if"
	"github.com/freedqo/fmc-go-agents/internal/fmc-go-agents-server/dal/db/dbif/urtyg_ai_agent_if/ai_chat_logs_if"
	"github.com/freedqo/fmc-go-agents/internal/fmc-go-agents-server/dal/db/dbif/urtyg_ai_agent_if/ai_knowledge_base_if"
	"github.com/freedqo/fmc-go-agents/internal/fmc-go-agents-server/dal/db/dbif/urtyg_ai_agent_if/ai_knowledge_chunks_if"
	"github.com/freedqo/fmc-go-agents/internal/fmc-go-agents-server/dal/db/dbif/urtyg_ai_agent_if/ai_knowledge_documents_if"
	"github.com/freedqo/fmc-go-agents/internal/fmc-go-agents-server/dal/db/dbif/urtyg_ai_agent_if/ai_mcp_if"
	"github.com/freedqo/fmc-go-agents/internal/fmc-go-agents-server/dal/db/dbif/urtyg_ai_agent_if/ai_prompt_if"
	"github.com/freedqo/fmc-go-agents/internal/fmc-go-agents-server/dal/db/dbif/urtyg_ai_agent_if/ai_session_logs_if"
	"github.com/freedqo/fmc-go-agents/internal/fmc-go-agents-server/dal/db/dbif/urtyg_ai_agent_if/ai_tool_if"
	"github.com/freedqo/fmc-go-agents/internal/fmc-go-agents-server/dal/db/gdb/urtyg_ai_agent_gdb/ai_chat_logs_gdb"
	"github.com/freedqo/fmc-go-agents/internal/fmc-go-agents-server/dal/db/gdb/urtyg_ai_agent_gdb/ai_knowledge_base_gdb"
	"github.com/freedqo/fmc-go-agents/internal/fmc-go-agents-server/dal/db/gdb/urtyg_ai_agent_gdb/ai_knowledge_chunks_gdb"
	"github.com/freedqo/fmc-go-agents/internal/fmc-go-agents-server/dal/db/gdb/urtyg_ai_agent_gdb/ai_knowledge_documents_gdb"
	"github.com/freedqo/fmc-go-agents/internal/fmc-go-agents-server/dal/db/gdb/urtyg_ai_agent_gdb/ai_mcp_gdb"
	"github.com/freedqo/fmc-go-agents/internal/fmc-go-agents-server/dal/db/gdb/urtyg_ai_agent_gdb/ai_prompt_gdb"
	"github.com/freedqo/fmc-go-agents/internal/fmc-go-agents-server/dal/db/gdb/urtyg_ai_agent_gdb/ai_session_logs_gdb"
	"github.com/freedqo/fmc-go-agents/internal/fmc-go-agents-server/dal/db/gdb/urtyg_ai_agent_gdb/ai_tool_gdb"
	"github.com/freedqo/fmc-go-agents/internal/fmc-go-agents-server/model/dalm/dbm/urtyg_ai_agent/model"
	"github.com/freedqo/fmc-go-agents/internal/fmc-go-agents-server/model/dalm/dbm/urtyg_ai_agent/query"
	"github.com/freedqo/fmc-go-agents/internal/fmc-go-agents-server/store/log"
	"github.com/freedqo/fmc-go-agents/pkg/fgrom"
	"gorm.io/gorm"
)

func New(opt *fgrom.Option) urtyg_ai_agent_if.If {
	conn := opt.Open("urtyg_ai_agent")
	if conn == nil {
		panic("db conn is nil")
	}
	gdb, err := fgrom.NewFGorm(log.SysLog(), conn)
	if err != nil {
		panic(err)
	}
	// 自动迁移表结构
	if opt.IsAutoMigrate {
		model.AutoMigrate(gdb)
	}

	genQ := query.Use(gdb)
	db := Db{
		gdb:                    gdb,
		genQ:                   genQ,
		ai_chat_logs:           ai_chat_logs_gdb.New(gdb, genQ),
		ai_knowledge_base:      ai_knowledge_base_gdb.New(gdb, genQ),
		ai_knowledge_chunks:    ai_knowledge_chunks_gdb.New(gdb, genQ),
		ai_knowledge_documents: ai_knowledge_documents_gdb.New(gdb, genQ),
		ai_mcp:                 ai_mcp_gdb.New(gdb, genQ),
		ai_prompt:              ai_prompt_gdb.New(gdb, genQ),
		ai_session_logs:        ai_session_logs_gdb.New(gdb, genQ),
		ai_tool:                ai_tool_gdb.New(gdb, genQ),
	}

	return &db
}

type Db struct {
	gdb                    *gorm.DB
	genQ                   *query.Query
	ai_chat_logs           ai_chat_logs_if.If
	ai_knowledge_base      ai_knowledge_base_if.If
	ai_knowledge_chunks    ai_knowledge_chunks_if.If
	ai_knowledge_documents ai_knowledge_documents_if.If
	ai_mcp                 ai_mcp_if.If
	ai_prompt              ai_prompt_if.If
	ai_session_logs        ai_session_logs_if.If
	ai_tool                ai_tool_if.If
}

func (d *Db) GenQ() *query.Query {
	return d.genQ
}
func (d *Db) Ai_chat_logs() ai_chat_logs_if.If {
	return d.ai_chat_logs
}
func (d *Db) Ai_knowledge_base() ai_knowledge_base_if.If {
	return d.ai_knowledge_base
}
func (d *Db) Ai_knowledge_chunks() ai_knowledge_chunks_if.If {
	return d.ai_knowledge_chunks
}
func (d *Db) Ai_knowledge_documents() ai_knowledge_documents_if.If {
	return d.ai_knowledge_documents
}
func (d *Db) Ai_mcp() ai_mcp_if.If {
	return d.ai_mcp
}
func (d *Db) Ai_prompt() ai_prompt_if.If {
	return d.ai_prompt
}
func (d *Db) Ai_session_logs() ai_session_logs_if.If {
	return d.ai_session_logs
}
func (d *Db) Ai_tool() ai_tool_if.If {
	return d.ai_tool
}

var _ urtyg_ai_agent_if.If = &Db{}
